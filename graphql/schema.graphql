" All transfers "
type Transfer @entity {
  from: String!
  to: String!
  value: BigInt!
  comment: String @fulltext(query: "commentSearch")
  block: Int!
} 

type Entity @entity {
  entityId: BigInt!
  name: String!
  countryId: BigInt
  cityId: BigInt
  address: String!
}

type Twin @entity {
  twinId: BigInt!
  address: String!
  ip: String!
}

type EntityProof @entity {
  entityId: BigInt!
  signature: String!
  twinRel: Twin!
}

type Farm @entity {
  farm_id: BigInt!
  name: String!
  twinId: BigInt!
  pricingPolicyId: BigInt!
  certification_type: CertificationType!
  countryId: BigInt
  cityId: BigInt
}

enum CertificationType {
  None
  Silver
  Gold
}

type Node @entity {
  node_id: BigInt!
  farm_id: BigInt!
  resources: Resource!
  location: Location!
  countryId: BigInt
  cityId: BigInt
  address: String!
  pubKey: String!
}

type Resource @entity {
  hru: BigInt
  sru: BigInt
  cru: BigInt
  mru: BigInt
}

type Location @entity {
  longitude: String!
  latitude: String!
}

type PricingPolicy @entity {
  pricingPolicyId: BigInt!
  name: String!
  currency: String!
  su: BigInt!
  cu: BigInt!
  nu: BigInt!
}

type Country @entity {
  id: BigInt!
  code: String!
  name: String!
}

type City @entity {
  id: BigInt!
  country_id: BigInt!
  name: String!
}